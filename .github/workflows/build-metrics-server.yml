on:
  push:
    paths:
      - .github/workflows/build-metrics-server.yml
      - packages/metrics_server/**
    branches:
      - main

env:
  AWS_DEFAULT_REGION: us-east-2
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS and Kubernetes
        uses: ./.github/actions/setup-aws-k8s
        with:
          kube-config-data: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Build and push metrics-server image
        uses: ./.github/actions/docker-build-push
        with:
          image-name: codex-metrics-server
          dockerfile-path: packages/metrics_server/Dockerfile
          build-context: .

      - name: Build and push grafana image
        uses: ./.github/actions/docker-build-push
        with:
          image-name: codex-metrics-grafana
          dockerfile-path: packages/metrics_server/Dockerfile.grafana
          build-context: packages/metrics_server

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-images
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS and Kubernetes
        uses: ./.github/actions/setup-aws-k8s
        with:
          kube-config-data: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Deploy metrics service to EKS
        run: |
          kubectl apply -f packages/metrics_server/k8s/deployment.yaml
          kubectl set image deployment/codex-metrics metrics-server=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/codex-metrics-server:${{ github.sha }}
          kubectl set image deployment/codex-metrics grafana=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/codex-metrics-grafana:${{ github.sha }}

      - name: Verify deployment rollout
        run: |
          kubectl rollout status deployment/codex-metrics --timeout=300s
