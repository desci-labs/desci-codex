type Claim @loadModel(id: "$CLAIM_ID") {
  id: ID!
}

type ResearchObject @loadModel(id: "$RESEARCH_OBJECT_ID") {
  id: ID!
}

type Annotation
  @createModel(accountRelation: LIST, description: "Textual commentary")
  @createIndex(fields: [{ path: "parentID" }])
  @createIndex(fields: [{ path: "claimID" }])
  @createIndex(fields: [{ path: "dagNode" }])
{
  owner: DID! @documentAccount
  version: CommitID! @documentVersion

  # Textual commentary on target
  comment: String! @string(maxLength: 1024)

  # Optionally tag a claim to contextualise the annotation
  claimID: StreamID @documentReference(model: "Claim") @immutable
  claim: Claim @relationDocument(property: "claimID")
  claimVersion: CommitID

  # Annotation (indicates a reply)
  parentID: StreamID @immutable
  # direct self-references are non-trivial apparently
  #parentID: StreamID @documentReference(model: "Annotation") @immutable
  parent: Annotation @relationDocument(property: "parentID")
  parentVersion: CommitID

  # Alternatively, directly annotate a raw DAG node without a component.
  # Path is necessary because CID is not necessarily unique.
  dagNode: CID
  pathToNode: String @string(maxLength: 512)

  # Localization of the annotation payload, depending on file type.
  # For example a JSON path, line number, or coordinates.
  locationOnFile: String @string(maxLength: 512)
}
